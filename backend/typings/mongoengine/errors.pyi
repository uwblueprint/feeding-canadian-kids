from _typeshed import Incomplete

__all__ = ['NotRegistered', 'InvalidDocumentError', 'LookUpError', 'DoesNotExist', 'MultipleObjectsReturned', 'InvalidQueryError', 'OperationError', 'NotUniqueError', 'BulkWriteError', 'FieldDoesNotExist', 'ValidationError', 'SaveConditionError', 'DeprecatedError']

class MongoEngineException(Exception): ...
class NotRegistered(MongoEngineException): ...
class InvalidDocumentError(MongoEngineException): ...
class LookUpError(AttributeError): ...
class DoesNotExist(MongoEngineException): ...
class MultipleObjectsReturned(MongoEngineException): ...
class InvalidQueryError(MongoEngineException): ...
class OperationError(MongoEngineException): ...
class NotUniqueError(OperationError): ...
class BulkWriteError(OperationError): ...
class SaveConditionError(OperationError): ...
class FieldDoesNotExist(MongoEngineException): ...

class ValidationError(AssertionError):
    errors: Incomplete
    field_name: Incomplete
    message: Incomplete
    def __init__(self, message: str = '', **kwargs) -> None: ...
    def __getattribute__(self, name): ...
    def to_dict(self): ...

class DeprecatedError(MongoEngineException): ...
